{"version":3,"sources":["components/CrossUnitsInput.js","components/RecipeSpecs.js","components/Ingredients.js","components/Stats.js","components/MashSteps.js","components/Recipe.js","containers/ImportArea.js","containers/EditorContainer.js","containers/PageRecipe.js","redux/reducers/updateEditor.js","data/recipe.js","data/equipment.js","App.js","registerServiceWorker.js","index.js"],"names":["CrossUnitsInput","_ref","name","description","value","unit","converted","litersToGallons","toFixed","kgToOunces","celsiusToFahrenheit","sgToPlato","srmToEbc","convertionMapper","react_default","a","createElement","title","RecipeSpecs","recipe","equipment","brewer","type","batchSize","boilSize","boilTime","efficiency","react_bootstrap_es","header","className","md","components_CrossUnitsInput","evapRate","coolingLossPct","trubChillerLoss","lauterDeadspace","topUpKettle","BIAB","toString","Ingredients","fermentables","hops","yeasts","striped","bordered","condensed","hover","map","i","index","key","amount","color","alpha","time","attenuation","form","Stats","og","originalGravity","gravityPoints","fg","finalGravity","avgBoilGravityPts","boilGravity","ibu","bitternessIbuTinseth","colorSRMvalue","colorSRM","abv","estABV","caloriesInOneL","calcCalories","Number","ouncesToLiters","style","backgroundColor","srmToCss","height","MashSteps","calculatedVolumes","calculateVolumes","calculatedMashSteps","mashRecalculate","mash","mashGrainWeight","combinedMashSteps","mashSteps","s","Object","assign","step","MashType","decoction","display","decoctionAmount","temperature","infuseAmount","infuseStepAmount","infussionTemp","stepTemp","stepTime","infusion","mashStepDescription","spargeVol","spargeTemp","Recipe","undefined","components_RecipeSpecs","components_Ingredients","components_MashSteps","components_Stats","connect","_ref2","editorState","dispatch","onReloadEditorState","payload","id","label","accept","onChange","e","reader","FileReader","readAsText","target","files","onloadend","result","importFromBeerXml","JSON","stringify","err","alert","href","onContentUpdate","eventKey","lib_default","mode","theme","width","maxLines","editorProps","$blockScrolling","Infinity","containers_ImportArea","components_Recipe","parse","error","tryParse","containers_EditorContainer","defaultState","version","asstBrewer","origin","use","notes","beta","hsi","displayAmount","inventory","displayTime","yield","addAfterBoil","supplier","coarseFineDiff","moisture","diastaticPower","protein","maxInBatch","recommendMash","ibuGalPerLb","potential","displayColor","extractSubstitute","amountIsWeight","laboratory","productId","minTemperature","maxTemperature","flocculation","bestFor","maxReuse","timesCultured","addToSecondary","dispMinTemp","dispMaxTemp","cultureDate","category","categoryNumber","styleLetter","styleGuide","ogMin","ogMax","fgMin","fgMax","ibuMin","ibuMax","colorMin","colorMax","carbMin","carbMax","abvMax","abvMin","profile","ingredients","examples","displayOgMin","displayOgMax","displayFgMin","displayFgMax","displayColorMin","displayColorMax","ogRange","fgRange","ibuRange","carbRange","colorRange","abvRange","grainTemp","tunTemp","ph","tunWeight","tunSpecificHeat","equipAdjust","displayGrainTemp","displayTunTemp","displaySpargeTemp","displayTunWeight","rampTime","endTemp","waterGrainRatio","decoctionAmt","infuseTemp","displayStepTemp","displayInfuseAmt","tasteNotes","tasteRating","carbonation","fermentationStages","primaryAge","primaryTemp","secondaryAge","secondaryTemp","tertiaryAge","age","ageTemp","carbonationUsed","forcedCarbonation","primingSugarName","primingSugarEquiv","kegPrimingFactor","carbonationTemp","displayCarbTemp","date","estOg","estFg","estColor","ibuMethod","estAbv","actualEfficiency","calories","displayBatchSize","displayBoilSize","displayOg","displayFg","displayPrimaryTemp","displaySecondaryTemp","displayTertiaryTemp","displayAgeTemp","tunVolume","topUpWater","calcBoilVolume","hopUtilization","persistedState","localStorage","getItem","updateEditor","state","arguments","length","objectSpread","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","getState","App","es","containers_PageRecipe","React","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","src_App","document","getElementById","URL","process","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d154c784.chunk.js","sourcesContent":["import React from 'react'\n\nimport {\n  litersToGallons,\n  kgToOunces,\n  celsiusToFahrenheit,\n  sgToPlato,\n  srmToEbc\n} from 'brewcalc'\n\n\nconst convertionMapper = (value, unit) => {\n\n  switch (unit) {\n    case 'L':\n      return { value: (litersToGallons(value).toFixed(2)), unit: 'gal' }\n    case 'kg':\n      return { value: (kgToOunces(value).toFixed(2)), unit: 'oz' }\n    case 'C':\n      return { value: (celsiusToFahrenheit(value).toFixed(2)), unit: '°F' }\n    case 'SG':\n      return { value: (sgToPlato(value).toFixed(2)), unit: '°P' }\n    case 'SRM':\n      return { value: (srmToEbc(value).toFixed(2)), unit: 'EBC' }\n    default:\n      return ''\n  }\n}\n\nconst CrossUnitsInput = ({ name, description, value, unit }) => {\n  const converted = convertionMapper(value, unit)\n  return (\n    (value !== '0.00' && value !== 'false') &&\n    <div title={description}><b>{name} </b>{value} {unit}\n      {converted !== '' ? ' (' + converted.value + ' ' + converted.unit + ')' : ''}\n    </div>\n  )\n}\n\nexport default CrossUnitsInput\n","import React from 'react'\nimport { Panel, Col, Row } from 'react-bootstrap'\n\nimport CrossUnitsInput from './CrossUnitsInput'\n\nconst RecipeSpecs = ({ recipe, equipment }) => {\n  const { name, brewer, type, batchSize, boilSize, boilTime, efficiency } = recipe\n  return (\n    <Panel header=\"Recipe Specs and Equipment\">\n      <Row className=\"show-grid\">\n        <Col md={6}>\n          <div>\n            <div title=\"Name of the recipe\" > <b>Name</b> {name} </div>\n            <div title=\"Name of the brewer\" > <b>Brewer</b> {brewer} </div>\n            <div title=\"May be one of “Extract”, “Partial Mash” or “All Grain”\" > <b>Type</b> {type} </div>\n            <CrossUnitsInput description=\"Target size of the finished batch in liters\" name=\"Batch Size\" value={batchSize.toFixed(2)} unit=\"L\" />\n            <CrossUnitsInput description=\"Starting size for the main boil of the wort in liters\" name=\"Boil Size\" value={boilSize.toFixed(2)} unit=\"L\" />\n            <CrossUnitsInput description=\"The total time to boil the wort in minutes\" name=\"Boil Time\" value={boilTime.toFixed(2)} unit=\"min\" />\n            <CrossUnitsInput description=\"The percent brewhouse efficiency to be used for estimating the starting gravity of the beer\" name=\"Efficiency\" value={efficiency * 100} unit=\"%\" />\n          </div>\n        </Col>\n        <Col md={6}>\n          {equipment === null ? (\n            <div>\n              Equipment is not set\n            </div>\n          ) : (\n              <div>\n                <div title=\"Name of the equipment profile – usually a text description of the brewing setup\" > <b>Equipment Name</b> {equipment.name} </div>\n                <CrossUnitsInput description=\"The target volume of the batch at the start of fermentation\" name=\"Batch Size\" value={equipment.batchSize.toFixed(2)} unit=\"L\" />\n                <CrossUnitsInput description=\"The pre-boil volume used in this particular instance for this equipment setup.  Note that this may be a calculated\" name=\"Boil Size\" value={equipment.boilSize.toFixed(2)} unit=\"L\" />\n                <CrossUnitsInput description=\"The percentage of wort lost to evaporation per hour of the boil\" name=\"Evap Rate\" value={equipment.evapRate.toFixed(2) * 100} unit=\"% per hour\" />\n                <CrossUnitsInput description=\"\" name=\"Cooling Loss\" value={equipment.coolingLossPct * 100} unit=\"%\" />\n                <CrossUnitsInput description=\"The amount of wort normally lost during transition from the boiler to the fermentation vessel\" name=\"Trub Chiller Loss\" value={equipment.trubChillerLoss.toFixed(2)} unit=\"L\" />\n                <CrossUnitsInput description=\"Amount lost to the lauter tun and equipment associated with the lautering process\" name=\"Lauter Deadspace\" value={equipment.lauterDeadspace.toFixed(2)} unit=\"L\" />\n                <CrossUnitsInput description=\"Amount normally added to the boil kettle before the boil\" name=\"TopUpKettle\" value={equipment.topUpKettle.toFixed(2)} unit=\"L\" />\n                <CrossUnitsInput description=\"\" name=\"BIAB\" value={equipment.BIAB.toString()} unit=\"\" />\n              </div>\n            )}\n        </Col>\n      </Row>\n    </Panel >\n  )\n}\nexport default RecipeSpecs\n","import React from 'react'\nimport { Panel, Table } from 'react-bootstrap'\nimport CrossUnitsInput from './CrossUnitsInput'\n\nconst Ingredients = ({ recipe }) => {\n  const { fermentables, hops, yeasts } = recipe\n  return (\n    <Panel header=\"Ingredients\">\n      <Table striped bordered condensed hover>\n        <thead>\n          <tr>\n            <th>Amount</th>\n            <th>Name</th>\n            <th>Type</th>\n          </tr>\n        </thead>\n        <tbody>\n          {fermentables.map((i, index) => (\n            <tr key={index}>\n              <td><CrossUnitsInput value={i.amount.toFixed(2)} unit=\"kg\" /></td>\n              <td>{i.name} ({i.color.toFixed(0)} SRM)</td>\n              <td>{i.type}</td>\n            </tr>\n          ))}\n          {hops.map((i, index) => (\n            <tr key={index}>\n              <td><CrossUnitsInput value={i.amount.toFixed(2)} unit=\"kg\" /></td>\n              <td>{i.name} ({i.alpha} Alpha, Boil time {i.time} min)</td>\n              <td>Hop</td>\n            </tr>\n          ))}\n          {yeasts.map((i, index) => (\n            <tr key={index}>\n              <td><CrossUnitsInput value={i.amount.toFixed(2)} unit=\"kg\" /></td>\n              <td>{i.name} (Attenuation {i.attenuation},  Form {i.form})</td>\n              <td>Yeast</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </Panel>\n  )\n}\n\nexport default Ingredients\n","import React from 'react'\nimport { Panel, Row, Col } from 'react-bootstrap'\nimport CrossUnitsInput from './CrossUnitsInput'\n\nimport {\n  originalGravity,\n  finalGravity,\n  gravityPoints,\n  boilGravity,\n  colorSRM,\n  estABV,\n  calcCalories,\n  srmToCss,\n  bitternessIbuTinseth,\n  ouncesToLiters\n} from 'brewcalc'\n\nconst Stats = ({ recipe, equipment }) => {\n\n  const { batchSize, boilSize, fermentables, hops, efficiency, yeasts } = recipe\n\n  const trubChillerLoss = equipment !== null ? equipment.trubChillerLoss : 0\n\n  const og = originalGravity(\n    batchSize,\n    gravityPoints(fermentables, efficiency)\n  )\n\n  const fg = finalGravity(\n    batchSize,\n    gravityPoints(fermentables, efficiency, yeasts[0].attenuation || recipe.efficiency)\n  )\n\n  const avgBoilGravityPts = boilGravity(\n    batchSize + trubChillerLoss,\n    boilSize,\n    og\n  ) - 1\n\n  const ibu = bitternessIbuTinseth(\n    hops,\n    avgBoilGravityPts,\n    batchSize + trubChillerLoss\n  )\n\n  const colorSRMvalue = colorSRM(\n    fermentables,\n    batchSize + trubChillerLoss\n  )\n\n  const abv = estABV(og, fg) * 1000\n  const calories = calcCalories(Number(og.toFixed(3)), Number(fg.toFixed(2)))\n  const caloriesInOneL = calories / (12 * ouncesToLiters(1))\n\n  return (\n    <Panel header=\"Gravity, Alcohol Content and Color\">\n      <Row className=\"show-grid\">\n        <Col md={6}>\n          <div>\n            <CrossUnitsInput description=\"The estimated original gravity of this recipe\" name=\"Original Gravity\" value={og.toFixed(3)} unit=\"SG\" />\n            <CrossUnitsInput description=\"The estimated final gravity of this recipe\" name=\"Final Gravity\" value={fg.toFixed(3)} unit=\"SG\" />\n            <div title=\"The bitterness of the recipe as measured in International Bitterness Units\"><b>Bitterness (IBUs): </b>{ibu.toFixed(2)} by Tinseth formula</div>\n            <CrossUnitsInput description=\"Estimated color of this beer\" name=\"Color\" value={colorSRMvalue.toFixed(2)} unit=\"SRM\" />\n            <div title=\"The estimated alcohol by volume for this recipe\"><b>Alcohol by volume : </b>{abv.toFixed(2)} %</div>\n            <div title=\"Calories in one liter of the beer, based on original and final gravities\">\n              <b>Calories: </b>{caloriesInOneL.toFixed(0)} per one L\n            </div>\n          </div>\n        </Col>\n        <Col md={6}>\n          <div\n            style={{\n              backgroundColor: srmToCss(colorSRMvalue),\n              height: 150\n            }}\n          />\n        </Col>\n      </Row>\n    </Panel>\n  )\n}\n\nexport default Stats\n","import React from 'react'\nimport { Panel, Table } from 'react-bootstrap'\nimport { calculateVolumes, mashRecalculate, MashType } from 'brewcalc'\nimport CrossUnitsInput from './CrossUnitsInput'\n\n//TODO: Add BIAB\n\nconst MashSteps = ({ recipe, equipment }) => {\n\n    const mashStepDescription = (step) => {\n        switch (step.type) {\n            case MashType.decoction:\n                return (<td style={{ display: 'flex' }}>Decoct&nbsp;<CrossUnitsInput value={step.decoctionAmount.toFixed(2)} unit=\"L\" />&nbsp;of mash and boil it</td>)\n            case MashType.temperature:\n                if (step.infuseAmount > 0)\n                    return (<td style={{ display: 'flex' }}>Add&nbsp;<CrossUnitsInput value={step.infuseStepAmount.toFixed(2)} unit=\"L\" />&nbsp;of water and heat to&nbsp;<CrossUnitsInput value={step.infussionTemp.toFixed(0)} unit=\"C\" /></td>)\n                else\n                    return (<td style={{ display: 'flex' }}>Heat to&nbsp;<CrossUnitsInput value={step.stepTemp.toFixed(0)} unit=\"C\" />&nbsp;over&nbsp;{step.stepTime}&nbsp;min</td>)\n            case MashType.infusion:\n            default:\n                return (<td style={{ display: 'flex' }}>Add&nbsp;<CrossUnitsInput value={step.infuseStepAmount.toFixed(2)} unit=\"L\" />&nbsp;of water at&nbsp;<CrossUnitsInput value={step.infussionTemp.toFixed(0)} unit=\"C\" /></td>)\n        }\n    }\n\n\n    const calculatedVolumes = calculateVolumes(recipe, equipment)\n    const calculatedMashSteps = mashRecalculate(recipe.mash, equipment, calculatedVolumes.mashGrainWeight)\n    const combinedMashSteps = recipe.mash.mashSteps.map((s, i) => {\n        return Object.assign({}, s, calculatedMashSteps[i])\n    })\n\n    return (\n        <Panel header=\"Mash Steps\">\n            <Table striped bordered condensed hover>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Description</th>\n                        <th>Step Temperature</th>\n                        <th>Step Time</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {recipe.mash.mashSteps.map((i, index) => (\n                        <tr key={index}>\n                            <td>{i.name}</td>\n                            {mashStepDescription(combinedMashSteps[index])}\n                            <td>\n                                <CrossUnitsInput value={i.stepTemp.toFixed(0)} unit=\"C\" />\n                            </td>\n                            <td>{i.stepTime.toFixed(0)} min</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n            <div style={{ display: 'flex' }}>\n                <b>Sparge:&nbsp;</b>Fly sparge with&nbsp;<CrossUnitsInput value={calculatedVolumes.spargeVol.toFixed(2)} unit=\"L\" />&nbsp;water at&nbsp;<CrossUnitsInput value={recipe.mash.spargeTemp.toFixed(0)} unit=\"C\" />\n            </div>\n        </Panel>\n    )\n}\n\nexport default MashSteps\n","import React from 'react'\nimport RecipeSpecs from './RecipeSpecs'\nimport Ingredients from './Ingredients'\nimport Stats from './Stats'\nimport MashSteps from './MashSteps'\n\nconst Recipe = ({ recipe, equipment }) =>\n  recipe !== undefined &&\n  <div>\n    <RecipeSpecs recipe={recipe} equipment={equipment} />\n    <Ingredients recipe={recipe} />\n\n    {equipment !== null &&\n      <MashSteps recipe={recipe} equipment={equipment} />\n    }\n    <Stats recipe={recipe} equipment={equipment} />\n\n  </div>\nexport default Recipe\n","import React from 'react'\nimport { FormGroup, FormControl, Panel, Row, Col } from 'react-bootstrap'\nimport { importFromBeerXml } from 'brewcalc/lib/import'\nimport { connect } from 'react-redux'\n\nconst ImportArea = ({ editorState, onReloadEditorState }) => {\n  const onXmlLoaded = e => {\n    const reader = new FileReader()\n    reader.readAsText(e.target.files[0])\n    reader.onloadend = function () {\n      try {\n        const result = importFromBeerXml(reader.result)\n        onReloadEditorState(\n          JSON.stringify(\n            { recipe: result.recipe, equipment: result.equipment },\n            null,\n            4\n          )\n        )\n      } catch (err) {\n        alert('Can\\'t import from BeerXML, see console for the details')\n      }\n    }\n  }\n\n  return (\n    <Row className=\"show-grid\">\n      <Col md={6}>\n        <Panel header=\"Upload BeerXML file\">\n          <FormGroup>\n            <FormControl\n              id=\"formControlsFile\"\n              type=\"file\"\n              label=\"File\"\n              accept=\"application/xml\"\n              onChange={onXmlLoaded}\n            />\n          </FormGroup>\n        </Panel>\n      </Col>\n      <Col md={6}>\n        <Panel header=\"brewcalc\">\n          <div>A modern (ES6) functional JavaScript library for brewing calculations.</div>\n          <a href=\"https://github.com/brewcomputer/brewcalc\">brewcalc lib on the GitHub (MIT license)</a>\n        </Panel>\n      </Col>\n    </Row>\n  )\n}\n\nconst mapStateToProps = ({ editorState }) => ({ editorState })\n\nconst mapDispatchToProps = dispatch => ({\n  onReloadEditorState: editorState => {\n    dispatch({\n      type: 'UPDATE_EDITOR_STATE',\n      payload: editorState\n    })\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImportArea)\n","import React from 'react'\nimport { Panel, Accordion } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport AceEditor from 'react-ace'\nimport 'brace/theme/github'\n//TODO:\n//https://github.com/securingsincity/react-ace/issues/240\nimport 'brace/mode/json'\n\nconst EditorContainer = ({ editorState, onContentUpdate }) => (\n  <Accordion>\n    <Panel header=\"&#8680; Expand and edit recipe and equipment JSON\" eventKey=\"1\">\n      <AceEditor\n        mode=\"json\"\n        theme=\"github\"\n        onChange={onContentUpdate}\n        value={editorState}\n        width=\"100%\"\n        maxLines={100}\n        editorProps={{ $blockScrolling: Infinity }}\n      />\n    </Panel>\n  </Accordion>\n)\n\nconst mapStateToProps = ({ editorState }) => ({ editorState })\n\nconst mapDispatchToProps = dispatch => ({\n  onContentUpdate: editorState => {\n    dispatch({\n      type: 'UPDATE_EDITOR_STATE',\n      payload: editorState\n    })\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorContainer)\n","import React from 'react'\nimport { Grid } from 'react-bootstrap'\nimport Recipe from '../components/Recipe'\nimport ImportArea from './ImportArea'\nimport EditorContainer from './EditorContainer'\n\nimport { connect } from 'react-redux'\n\nconst PageRecipe = ({ editorState }) => {\n  const tryParse = editorState => {\n    try {\n      return JSON.parse(editorState)\n    } catch (error) {\n      return null\n    }\n  }\n  return (\n    <Grid>\n      <ImportArea />\n      <Recipe {...tryParse(editorState) } />\n      <EditorContainer />\n    </Grid>\n  )\n}\n\nconst mapStateToProps = ({ editorState }) => ({ editorState })\n\nexport default connect(mapStateToProps)(PageRecipe)\n","import { recipe } from '../../data/recipe'\nimport { equipment } from '../../data/equipment'\n\nconst defaultState = {\n  editorState: JSON.stringify({ recipe, equipment }, null, 4)\n}\n\nconst updateEditor = (state = defaultState, { payload, type }) => {\n  if (type === 'UPDATE_EDITOR_STATE') {\n    return {\n      ...state,\n      editorState: payload\n    }\n  }\n  return state\n}\n\nexport const persistedState = localStorage.getItem('brewCalcState')\n  ? JSON.parse(localStorage.getItem('brewCalcState'))\n  : defaultState\n\nexport default updateEditor\n","export const recipe = {\n  name: 'Aussie Ale',\n  version: '1',\n  type: 'All Grain',\n  brewer: 'Steve Nicholls',\n  asstBrewer: '',\n  batchSize: 23.0200000,\n  boilSize: 37.1203164,\n  boilTime: 90.0000000,\n  efficiency: 0.68,\n  hops: [\n    {\n      name: 'Pride of Ringwood',\n      version: '1',\n      origin: 'Australia',\n      alpha: 0.10,\n      amount: 0.0052055,\n      use: 'First Wort',\n      time: 60.0000000,\n      notes: 'Use for: General purpose bittering hops for Australian beers\\r\\nAroma: Moderate citric aroma, clean bittering flavor\\r\\nSubstitutes: Cluster, Galena',\n      type: 'Both',\n      form: 'Leaf',\n      beta: '5.8000000',\n      hsi: '45.0000000',\n      displayAmount: '5.21 g',\n      inventory: '5.00 g',\n      displayTime: '60.0 min'\n    },\n    {\n      name: 'Pride of Ringwood',\n      version: '1',\n      origin: 'Australia',\n      alpha: 0.10,\n      amount: 0.0052055,\n      use: 'Boil',\n      time: 45.0000000,\n      notes: 'Use for: General purpose bittering hops for Australian beers\\r\\nAroma: Moderate citric aroma, clean bittering flavor\\r\\nSubstitutes: Cluster, Galena',\n      type: 'Bittering',\n      form: 'Pellet',\n      beta: '5.8000000',\n      hsi: '45.0000000',\n      displayAmount: '5.21 g',\n      inventory: '5.00 g',\n      displayTime: '45.0 min'\n    },\n    {\n      name: 'Pride of Ringwood',\n      version: '1',\n      origin: 'Australia',\n      alpha: 0.10,\n      amount: 0.0312328,\n      use: 'Boil',\n      time: 15.0000000,\n      notes: 'Use for: General purpose bittering hops for Australian beers\\r\\nAroma: Moderate citric aroma, clean bittering flavor\\r\\nSubstitutes: Cluster, Galena',\n      type: 'Both',\n      form: 'Leaf',\n      beta: '5.8000000',\n      hsi: '45.0000000',\n      displayAmount: '31.23 g',\n      inventory: '30.00 g',\n      displayTime: '15.0 min'\n    },\n    {\n      name: 'Pride of Ringwood',\n      version: '1',\n      origin: 'Australia',\n      alpha: 0.10,\n      amount: 0.0156818,\n      use: 'Boil',\n      time: 0.0000000,\n      notes: 'Use for: General purpose bittering hops for Australian beers\\r\\nAroma: Moderate citric aroma, clean bittering flavor\\r\\nSubstitutes: Cluster, Galena',\n      type: 'Bittering',\n      form: 'Leaf',\n      beta: '5.8000000',\n      hsi: '45.0000000',\n      displayAmount: '15.68 g',\n      inventory: '15.00 g',\n      displayTime: '0.0 min'\n    }\n  ],\n  fermentables: [\n    {\n      name: 'Pale Malt (2 Row) UK',\n      version: '1',\n      type: 'Grain',\n      amount: 4.4969891,\n      yield: 0.65,\n      color: 4.9250000,\n      addAfterBoil: false,\n      origin: 'United Kingdom',\n      supplier: '',\n      notes: 'Base malt for all English beer styles\\r\\nLower diastatic power than American 2 Row Pale Malt',\n      coarseFineDiff: '1.5000000',\n      moisture: '4.0000000',\n      diastaticPower: '45.0000000',\n      protein: '10.1000000',\n      maxInBatch: '100.0000000',\n      recommendMash: false,\n      ibuGalPerLb: '0.0000000',\n      displayAmount: '4.50 kg',\n      inventory: '3.90 kg',\n      potential: 1.0299920,\n      displayColor: '4.9 EBC',\n      extractSubstitute: ''\n    },\n    {\n      name: 'Munich Malt - 20L',\n      version: '1',\n      type: 'Grain',\n      amount: 0.5188834,\n      yield: 0.75,\n      color: 39.4000000,\n      addAfterBoil: false,\n      origin: 'US',\n      supplier: '',\n      notes: 'Malty-sweet flavor characteristic and adds a orange to deep orange color to the beer.\\r\\nDoes not contribute signficantly to body or head retention.\\r\\nUse for: Bock, Porter, Marzen, Oktoberfest beers',\n      coarseFineDiff: '2.8000000',\n      moisture: '5.0000000',\n      diastaticPower: '25.0000000',\n      protein: '13.5000000',\n      maxInBatch: '80.0000000',\n      recommendMash: true,\n      ibuGalPerLb: '0.0000000',\n      displayAmount: '0.52 kg',\n      inventory: '0.45 kg',\n      potential: 1.0345000,\n      displayColor: '39.4 EBC',\n      extractSubstitute: 'Amber Liquid Extract'\n    },\n    {\n      name: 'Caramel/Crystal Malt - 20L',\n      version: '1',\n      type: 'Grain',\n      amount: 0.2017880,\n      yield: 0.75,\n      color: 39.4000000,\n      addAfterBoil: false,\n      origin: 'US',\n      supplier: '',\n      notes: 'Adds body, color and improves head retention.\\r\\nAlso called &#34;Crystal&#34; malt.',\n      coarseFineDiff: '1.5000000',\n      moisture: '4.0000000',\n      diastaticPower: '0.0000000',\n      protein: '13.2000000',\n      maxInBatch: '20.0000000',\n      recommendMash: false,\n      ibuGalPerLb: '0.0000000',\n      displayAmount: '0.20 kg',\n      inventory: '0.17 kg',\n      potential: 1.0345000,\n      displayColor: '39.4 EBC',\n      extractSubstitute: ''\n    },\n    {\n      name: 'Roasted Barley',\n      version: '1',\n      type: 'Grain',\n      amount: 0.0461230,\n      yield: 0.55,\n      color: 591.0000000,\n      addAfterBoil: false,\n      origin: 'US',\n      supplier: '',\n      notes: 'Roasted at high temperature to create a burnt, grainy, coffee like flavor.\\r\\nImparts a red to deep brown color to beer, and very strong roasted flavor.\\r\\nUse 2-4% in Brown ales to add a nutty flavor, or 3-10% in Porters and Stouts for coffee flavor.',\n      coarseFineDiff: '1.5000000',\n      moisture: '5.0000000',\n      diastaticPower: '0.0000000',\n      protein: '13.2000000',\n      maxInBatch: '10.0000000',\n      recommendMash: false,\n      ibuGalPerLb: '0.0000000',\n      displayAmount: '0.05 kg',\n      inventory: '0.04 kg',\n      potential: 1.0253000,\n      displayColor: '591.0 EBC',\n      extractSubstitute: ''\n    },\n    {\n      name: 'Cane (Beet) Sugar',\n      version: '1',\n      type: 'Sugar',\n      amount: 0.2613635,\n      yield: 1,\n      color: 0.0000000,\n      addAfterBoil: false,\n      origin: 'US',\n      supplier: '',\n      notes: 'Common household baking sugar.\\r\\nLightens flavor and body of beer.\\r\\nCan contribute a cider-like flavor to the beer if not cold-fermented or used in large quantities.',\n      coarseFineDiff: '1.5000000',\n      moisture: '4.0000000',\n      diastaticPower: '120.0000000',\n      protein: '11.7000000',\n      maxInBatch: '7.0000000',\n      recommendMash: false,\n      ibuGalPerLb: '0.0000000',\n      displayAmount: '0.26 kg',\n      inventory: '0.25 kg',\n      potential: 1.0460000,\n      displayColor: '0.0 EBC',\n      extractSubstitute: ''\n    }\n  ],\n  yeasts: [\n    {\n      name: 'American Ale',\n      version: '1',\n      type: 'Ale',\n      form: 'Liquid',\n      amount: 0.1250480,\n      amountIsWeight: false,\n      laboratory: 'Wyeast Labs',\n      productId: '1056',\n      minTemperature: '15.5555556',\n      maxTemperature: '22.2222222',\n      flocculation: 'Medium',\n      attenuation: 0.75,\n      notes: 'Soft, smooth, clean finish.  Very well balanced.  Very versitile -- works well with many ale styles.',\n      bestFor: 'American Pale Ale, Scottish Ale, Porters, Sweet Stout, Barley Wine, Alt',\n      maxReuse: '5',\n      timesCultured: '0',\n      addToSecondary: false,\n      displayAmount: '125.05 ml',\n      dispMinTemp: '15.6 C',\n      dispMaxTemp: '22.2 C',\n      inventory: '0.0 pkg',\n      cultureDate: '18 Jun 2003'\n    }\n  ],\n  style: {\n    name: 'Australian Ale',\n    version: '1',\n    category: 'Ale',\n    categoryNumber: '1',\n    styleLetter: 'A',\n    styleGuide: '',\n    type: 'Ale',\n    ogMin: '1.0350000',\n    ogMax: '1.0600000',\n    fgMin: '1.0080000',\n    fgMax: '1.0150000',\n    ibuMin: '10.0000000',\n    ibuMax: '30.0000000',\n    colorMin: '3.9400000',\n    colorMax: '19.7000000',\n    carbMin: '2.2000000',\n    carbMax: '2.8000000',\n    abvMax: '5.0000000',\n    abvMin: '2.0000000',\n    notes: 'Medium malt with slight grain dryness',\n    profile: '',\n    ingredients: 'Pride of Ringwood hops.',\n    examples: 'Cooper&#39;s Pale Ale',\n    displayOgMin: '1.035 SG',\n    displayOgMax: '1.060 SG',\n    displayFgMin: '1.008 SG',\n    displayFgMax: '1.015 SG',\n    displayColorMin: '3.9 EBC',\n    displayColorMax: '19.7 EBC',\n    ogRange: '1.035-1.060 SG',\n    fgRange: '1.008-1.015 SG',\n    ibuRange: '10.0-30.0 IBUs',\n    carbRange: '2.20-2.80 Vols',\n    colorRange: '3.9-19.7 EBC',\n    abvRange: '2.00-5.00 %'\n  },\n  mash: {\n    name: 'Single Infusion, Medium Body',\n    version: '1',\n    grainTemp: 22.2222222,\n    tunTemp: 22.2222222,\n    spargeTemp: 75.5555556,\n    ph: '5.4000000',\n    tunWeight: '144.0000000',\n    tunSpecificHeat: '0.3000000',\n    equipAdjust: true,\n    notes: 'Simple single infusion mash for use with most modern well modified grains (about 95% of the time).',\n    displayGrainTemp: '22.2 C',\n    displayTunTemp: '22.2 C',\n    displaySpargeTemp: '75.6 C',\n    displayTunWeight: '4.08 kg',\n    mashSteps: [\n      {\n        name: 'Mash In',\n        version: '1',\n        type: 'Infusion',\n        infuseAmount: 13.7276426,\n        stepTime: 60.0000000,\n        stepTemp: 66.6666667,\n        rampTime: 2.0000000,\n        endTemp: 66.6666667,\n        description: 'Add 16.76 l of water at 74.1 C',\n        waterGrainRatio: '2.608 qt/lb',\n        decoctionAmt: '0.00 l',\n        infuseTemp: '74.1 C',\n        displayStepTemp: '66.7 C',\n        displayInfuseAmt: '16.76 l'\n      },\n      {\n        name: 'Mash Out',\n        version: '1',\n        type: 'Infusion',\n        infuseAmount: 7.6874799,\n        stepTime: 10.0000000,\n        stepTemp: 75.5555556,\n        rampTime: 2.0000000,\n        endTemp: 75.5555556,\n        description: 'Add 7.69 l of water at 98.5 C',\n        waterGrainRatio: '4.644 qt/lb',\n        decoctionAmt: '0.00 l',\n        infuseTemp: '98.5 C',\n        displayStepTemp: '75.6 C',\n        displayInfuseAmt: '7.69 l'\n      }\n    ]\n  },\n  notes: 'FWH the first  hop addition.\\r\\nAllow last addition to sit for 5 minutes to release aroma.',\n  tasteNotes: 'Very similar to Australian beers in the 60&#39;s.  Pride of Ringwood is the traditional hop used for a very large number of Australian beers. Although not considered a typical flavour hop it works very well as a single hopped beer.  Aim for 50 - 100 ppm of C',\n  tasteRating: '41.0000000',\n  og: 1.0440000,\n  fg: 1.0080000,\n  carbonation: '2.4000000',\n  fermentationStages: '2',\n  primaryAge: '4.0000000',\n  primaryTemp: '19.4444444',\n  secondaryAge: '10.0000000',\n  secondaryTemp: '19.4444444',\n  tertiaryAge: '7.0000000',\n  age: '30.0000000',\n  ageTemp: '18.3333333',\n  carbonationUsed: 'Bottle with 133.96 g Corn Sugar',\n  forcedCarbonation: true,\n  primingSugarName: 'Corn Sugar',\n  primingSugarEquiv: '1.0000000',\n  kegPrimingFactor: '0.5000000',\n  carbonationTemp: '21.1111111',\n  displayCarbTemp: '21.1 C',\n  date: '14 May 2011',\n  estOg: '1.044 SG',\n  estFg: '1.008 SG',\n  estColor: '16.8 EBC',\n  ibu: '28.0 IBUs',\n  ibuMethod: 'Tinseth',\n  estAbv: '4.7 %',\n  abv: '4.7 %',\n  actualEfficiency: '68.0 %',\n  calories: '405.4 kcal/l',\n  displayBatchSize: '23.02 l',\n  displayBoilSize: '37.12 l',\n  displayOg: '1.044 SG',\n  displayFg: '1.008 SG',\n  displayPrimaryTemp: '19.4 C',\n  displaySecondaryTemp: '19.4 C',\n  displayTertiaryTemp: '18.3 C',\n  displayAgeTemp: '18.3 C'\n}\n","export const equipment = {\n  name: 'Pot (13 Gal/50 L) - BIAB',\n  boilSize: 36.0199780,\n  batchSize: 23.0154363,\n  tunVolume: 50.0055779,\n  tunWeight: 6.9989246,\n  tunSpecificHeat: 0.1200000,\n  topUpWater: '0.0000000',\n  trubChillerLoss: 3.8232879,\n  evapRate: 0.149231510,\n  boilTime: '90.0000000',\n  calcBoilVolume: 'TRUE',\n  lauterDeadspace: 0,\n  topUpKettle: 0,\n  hopUtilization: '100.0000000',\n  coolingLossPct: 0.04,\n  efficiency: 0.68,\n  BIAB: false\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport PageRecipe from './containers/PageRecipe'\nimport updateEditor from './redux/reducers/updateEditor'\nimport { persistedState } from './redux/reducers/updateEditor'\n\nconst store = createStore(\n  updateEditor,\n  persistedState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\nstore.subscribe(() => {\n  localStorage.setItem('brewCalcState', JSON.stringify(store.getState()))\n})\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <PageRecipe />\n        </div>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}